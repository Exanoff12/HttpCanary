apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
version = "1.3.2"
apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 132
        versionName "1.3.2"

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compileOnly 'androidx.appcompat:appcompat:1.0.2'
    api('net.lightbody.bmp:littleproxy:1.1.0-beta-bmp-17') {
        exclude group: 'io.netty'
    }
    implementation files('libs/netty-all-android-4.0.44.Final.jar')
    api 'com.fasterxml.jackson.core:jackson-databind:2.7.6'
    api 'org.bouncycastle:bcprov-jdk15on:1.56'
    api 'org.bouncycastle:bcpkix-jdk15on:1.56'
    api 'com.google.guava:guava:24.1-jre'
}


def siteUrl = 'https://github.com/guxiaonian/HttpCanary'
def gitUrl = 'https://github.com/guxiaonian/HttpCanary.git'
group = "fairy.easy.httpcanary"
install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                name 'Android'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'mobile'
                        name 'mobile'
                        email 'gunaonian@geetest.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant2 ->
        variant2.getJavaCompiler().classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user =  properties.getProperty("bintray.user")
    key =  properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "httpcanary"
        name = "httpcanaryAndroidX"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}